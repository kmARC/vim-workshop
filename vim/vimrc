call plug#begin('~/.vim/plugged')

" Tree-like panel to navigate files
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }

" Fuzzy finder
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'

" Autocompletion
Plug 'maralla/completor.vim'

" Commenting
Plug 'tpope/vim-commentary'

" Linter
Plug 'w0rp/ale'

" Git-related
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-rhubarb'
Plug 'shumphrey/fugitive-gitlab.vim'

" Filetype helpers
Plug 'hashivim/vim-terraform'  , {'for': 'terraform'}
Plug 'pearofducks/ansible-vim' , {'for': 'ansible*'}

" Snippets
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'

" Markdown
Plug 'shime/vim-livedown', {'for': 'markdown'}

" Theme
Plug 'romainl/Apprentice'
Plug 'itchyny/lightline.vim'

call plug#end()

" Use modern vim
syntax on
filetype plugin indent on
set nocompatible


" Colors
colorscheme apprentice

" Mappings
nnoremap <c-h> <c-w>h
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l
nnoremap <F7>  :NERDTreeToggle<CR>
nnoremap <c-p> :Files<CR>
nnoremap <F3>  :Ag<CR>
nnoremap <F9>  :lopen<CR>

" Display
set number relativenumber
set nowrap
set laststatus=2
set noshowmode
set scrolloff=3
set colorcolumn=81
set cursorline

" Misc
set mouse+=a
set hidden
set wildmenu
set diffopt+=vertical

" Indentation and tab key handling
set tabstop=2 shiftwidth=2 softtabstop=2
set smarttab
set expandtab
set autoindent
set smartindent

" Search related
set ignorecase
set smartcase
set incsearch
set hlsearch

" Files
set backup
set undofile
set directory=~/.vim/vimswap//
set backupdir=~/.vim/vimbackup//
set undodir=~/.vim/vimundo//
set viminfo+=n~/.vim/misc/viminfo

" Wildmenu
set wildignorecase
set wildignore+=*.pyc,*.retry,*.bak

" Autocommands
augroup vimrc
  autocmd!
  autocmd FileType terraform setlocal commentstring=#%s
augroup end

" Plugin configuration
let g:ale_sign_column_always = 1
let g:completor_refresh_always = 0
let g:lightline = { 'colorscheme': 'jellybeans' }
let g:terraform_align = 1
let g:fugitive_gitlab_domains = [ 'https://gitlab.tools.in.pan-net.eu/' ]
let g:UltiSnipsExpandTrigger = "<c-j>"
let g:UltiSnipsListSnippets = "<c-h>"

" Set autoload defaults
set modeline
set exrc
set secure
